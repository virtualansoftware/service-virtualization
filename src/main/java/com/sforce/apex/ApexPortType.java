package com.sforce.apex;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.7
 * 2020-09-21T07:44:17.163-05:00
 * Generated source version: 3.3.7
 *
 */
@WebService(targetNamespace = "http://soap.sforce.com/2006/08/apex", name = "ApexPortType")
@XmlSeeAlso({ObjectFactory.class})
public interface ApexPortType {

    /**
     * Execute an anonymous Apex code block
     */
    @WebMethod
    @RequestWrapper(localName = "executeAnonymous", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.ExecuteAnonymous")
    @ResponseWrapper(localName = "executeAnonymousResponse", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.ExecuteAnonymousResponse")
    @WebResult(name = "result", targetNamespace = "http://soap.sforce.com/2006/08/apex")
    public com.sforce.apex.ExecuteAnonymousResult executeAnonymous(

        @WebParam(name = "String", targetNamespace = "http://soap.sforce.com/2006/08/apex")
        java.lang.String string
    );

    /**
     * Compile Apex Trigger code blocks.
     */
    @WebMethod
    @RequestWrapper(localName = "compileTriggers", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.CompileTriggers")
    @ResponseWrapper(localName = "compileTriggersResponse", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.CompileTriggersResponse")
    @WebResult(name = "result", targetNamespace = "http://soap.sforce.com/2006/08/apex")
    public java.util.List<com.sforce.apex.CompileTriggerResult> compileTriggers(

        @WebParam(name = "scripts", targetNamespace = "http://soap.sforce.com/2006/08/apex")
        java.util.List<java.lang.String> scripts
    );

    /**
     * Compile one or more Apex Classes, Triggers, and run tests.
     */
    @WebMethod
    @RequestWrapper(localName = "compileAndTest", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.CompileAndTest")
    @ResponseWrapper(localName = "compileAndTestResponse", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.CompileAndTestResponse")
    @WebResult(name = "result", targetNamespace = "http://soap.sforce.com/2006/08/apex")
    public com.sforce.apex.CompileAndTestResult compileAndTest(

        @WebParam(name = "CompileAndTestRequest", targetNamespace = "http://soap.sforce.com/2006/08/apex")
        com.sforce.apex.CompileAndTestRequest compileAndTestRequest
    );

    /**
     * Generate Apex packages from WSDL for web service callouts
     */
    @WebMethod
    @RequestWrapper(localName = "wsdlToApex", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.WsdlToApex")
    @ResponseWrapper(localName = "wsdlToApexResponse", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.WsdlToApexResponse")
    @WebResult(name = "result", targetNamespace = "http://soap.sforce.com/2006/08/apex")
    public com.sforce.apex.WsdlToApexResult wsdlToApex(

        @WebParam(name = "info", targetNamespace = "http://soap.sforce.com/2006/08/apex")
        com.sforce.apex.WsdlToApexInfo info
    );

    /**
     * Execute test methods
     */
    @WebMethod
    @RequestWrapper(localName = "runTests", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.RunTests")
    @ResponseWrapper(localName = "runTestsResponse", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.RunTestsResponse")
    @WebResult(name = "result", targetNamespace = "http://soap.sforce.com/2006/08/apex")
    public com.sforce.apex.RunTestsResult runTests(

        @WebParam(name = "RunTestsRequest", targetNamespace = "http://soap.sforce.com/2006/08/apex")
        com.sforce.apex.RunTestsRequest runTestsRequest
    );

    /**
     * Compile one or more Apex Classes.
     */
    @WebMethod
    @RequestWrapper(localName = "compileClasses", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.CompileClasses")
    @ResponseWrapper(localName = "compileClassesResponse", targetNamespace = "http://soap.sforce.com/2006/08/apex", className = "com.sforce.apex.CompileClassesResponse")
    @WebResult(name = "result", targetNamespace = "http://soap.sforce.com/2006/08/apex")
    public java.util.List<com.sforce.apex.CompileClassResult> compileClasses(

        @WebParam(name = "scripts", targetNamespace = "http://soap.sforce.com/2006/08/apex")
        java.util.List<java.lang.String> scripts
    );
}
